#BlueJ class context
comment0.target=Curso
comment0.text=\r\n\ Clase\ Curso\ contiene\ el\ nombre\ del\ curso\ y\ un\ HashMap\ con\ los\ alumnos\ inscriptos\r\n\ permite\ Agregar\ e\ inscribir\ alumnos\ al\ curso\ ademas\ de\ mostrar\ los\ datos\ de\ los\ mismos\r\n\ \r\n\ @author\ Pannunzio\ M.\ Nicolas\ -\ Quintana\ Antonio\r\n\ @version\ 08/09/25\r\n
comment1.params=p_nombre
comment1.target=Curso(java.lang.String)
comment1.text=\r\n\ Constructor\ que\ recibe\ solo\ el\ nombre\ del\ curso\r\n
comment10.params=p_lu
comment10.target=boolean\ estaInscripto(int)
comment10.text=\r\n\ Verifica\ si\ esta\ en\ el\ HashMap\ un\ determinado\ alumno,\ buscandolo\r\n\ por\ su\ clave\ LU.\ utiliza\ el\ metodo\ .containsKey()\r\n\ @param\ p_lu\ que\ es\ la\ clave\ para\ buscar\ el\ alumno.\r\n\ @return\ True\ si\ esta\ inscripto\ (pertenece\ al\ HashMap),\ False\ caso\ contrario.\r\n
comment11.params=p_alumno
comment11.target=boolean\ estaInscripto(Alumno)
comment11.text=\r\n\ Verifica\ si\ esta\ en\ el\ HashMap\ un\ determinado\ alumno,\ buscandolo\r\n\ por\ su\ valor\ p_alumno\ (tipo\ Alumno).\ utiliza\ el\ metodo\ .containsValue()\r\n\ @param\ p_alumno\ que\ es\ el\ valor\ para\ buscar\ el\ alumno.\r\n\ @return\ True\ si\ esta\ inscripto\ (pertenece\ al\ HashMap),\ False\ caso\ contrario.\r\n
comment12.params=p_lu
comment12.target=Alumno\ buscarAlumno(int)
comment12.text=\r\n\ Busca\ y\ devuelve\ un\ Alumno,\ teniendo\ en\ cuenta\ el\ p_lu\ recibido\ por\ parametro.\r\n\ @param\ p_lu\ que\ se\ usara\ como\ clave\ para\ buscar\ el\ Alumno.\r\n\ @return\ Objeto\ Alumno\ encontrado,\ null\ si\ no\ se\ encontro.\r\n
comment13.params=p_lu
comment13.target=void\ imprimirPromedioDelAlumno(int)
comment13.text=\r\n\ Busca\ e\ imprime\ el\ apellido\ y\ nombre,\ junto\ con\ el\ promedio\ del\ Alumno,\r\n\ teniendo\ en\ cuenta\ el\ p_lu\ recibido\ por\ parametro.\r\n\ @param\ p_lu\ que\ se\ usara\ como\ clave\ para\ buscar\ el\ Alumno.\r\n
comment14.params=
comment14.target=void\ mostrarInscriptos()
comment14.text=\r\n\ Recorre\ y\ muestra\ LU\ y\ NomYApe\ de\ cada\ Alumno\ contenido\ en\ el\ HashMap.\r\n\ Lo\ hace\ con\ un\ ForEach\ (Map.Entry\ \:\ .entrySet())\r\n
comment2.params=p_nombre\ p_alumnos
comment2.target=Curso(java.lang.String,\ java.util.HashMap)
comment2.text=\r\n\ Constructor\ que\ recibe\ el\ nombre\ del\ curso\ y\ un\ HashMap\ de\ alumnos\r\n
comment3.params=p_nombre
comment3.target=void\ setNombre(java.lang.String)
comment4.params=p_alumnos
comment4.target=void\ setAlumnos(java.util.HashMap)
comment5.params=
comment5.target=java.lang.String\ getNombre()
comment6.params=
comment6.target=java.util.HashMap\ getAlumnos()
comment7.params=p_alumno
comment7.target=void\ inscribirAlumno(Alumno)
comment8.params=p_lu
comment8.target=Alumno\ quitarAlumno(int)
comment9.params=
comment9.target=int\ cantidadDeAlumnos()
comment9.text=\r\n\ Devuelve\ la\ cantidad\ de\ alumnos\ que\ hay\ en\ el\ HashMap\r\n\ utilizando\ el\ metodo\ predefinido\ .size()\r\n\ @return\ Cantidad\ de\ alumnos\ (Tamanio\ del\ HashMap)\r\n
numComments=15
